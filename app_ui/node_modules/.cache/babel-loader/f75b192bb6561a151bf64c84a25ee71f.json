{"ast":null,"code":"import _classCallCheck from \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './header';\nimport Questions from \"./questions\";\nimport TruffleContract from 'truffle-contract';\nimport PostQuestion from \"./postquestion\";\nimport Web3 from 'web3';\nimport AnswerIT from '../../backend/build/contracts/AnswerIT.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.postAnswer = function (id, answer) {\n      _this.contracts.PostAnswer(id, answer, {\n        from: _this.state.account,\n        gas: 3000000\n      });\n\n      _this.getQuestions();\n    };\n\n    _this.postQuestion = function (question) {\n      _this.contracts.PostQuestion(question, {\n        from: _this.state.account,\n        gas: 3000000\n      });\n\n      _this.getQuestions();\n    };\n\n    _this.getQuestions = function () {\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      self.state.contracts.msgCount().then(function (msgCount) {\n        var questions = [];\n\n        for (var i = 0; i < msgCount.toNumber(); i++) {\n          self.state.contracts.Messages(i).then(function (q) {\n            var numAnswers = q[5].toNumber();\n            var id = q[1].toNumber();\n            var allAnswers = [];\n\n            if (numAnswers == 0) {\n              q.push(allAnswers);\n              questions.push(q);\n              self.setState({\n                questions: questions\n              });\n            } else {\n              var _loop = function _loop(j) {\n                answers = [];\n                upvoteCounts = [];\n                upvoteValues = [];\n                ownerAddress = [];\n                self.state.contracts.IterateAnswers(id, j).then(function (answer) {\n                  answers.push(answer);\n                  self.state.contracts.GetUpvoteCount(id, j).then(function (upvoteCount) {\n                    upvoteCounts.push(upvoteCount);\n                    self.state.contracts.GetUpvoteValue(id, j).then(function (upvoteValue) {\n                      upvoteValues.push(upvoteValue);\n                      self.state.contracts.GetOwnerAddress(id, j).then(function (owner) {\n                        ownerAddress.push(owner);\n                        if (j == numAnswers - 1) self.setAnswers(answers, upvoteCounts, upvoteValues, ownerAddress, numAnswers, q, questions);\n                      });\n                    });\n                  });\n                });\n              };\n\n              for (var j = 0; j < numAnswers; j++) {\n                var answers;\n                var upvoteCounts;\n                var upvoteValues;\n                var ownerAddress;\n\n                _loop(j);\n              }\n            }\n          });\n        }\n      });\n    };\n\n    _this.setAnswers = function (answers, upvoteCounts, upvoteValues, ownerAddress, numAnswers, q, questions) {\n      var allAnswers = [];\n\n      for (var x = 0; x < numAnswers; x++) {\n        allAnswers.push([answers[x], upvoteCounts[x], upvoteValues[x], ownerAddress[x], \"User\" + (x + 1).toString()]);\n      }\n\n      q.push(allAnswers);\n      questions.push(q);\n\n      _this.setState({\n        questions: questions\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this.web3.eth.getCoinbase(function (err, acc) {\n        _this.setState({\n          account: acc\n        });\n\n        _this.AnswerIT.deployed().then(function (instance) {\n          _this.contracts = instance;\n\n          _this.setState({\n            contracts: _this.contracts\n          }, function () {\n            this.getQuestions();\n          });\n        });\n      });\n    };\n\n    _this.handleUpvote = function (quesId, ansId) {\n      _this.contracts.UpvoteAnswer(quesId, ansId, {\n        from: _this.state.account,\n        gas: 3000000\n      });\n    };\n\n    _this.render = function () {\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(PostQuestion, {\n        question: _this.postQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"questions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, _this.state.questions.map(function (item, i) {\n        return React.createElement(Questions, {\n          key: i,\n          username: item[0],\n          question: item[2],\n          answer: item[8],\n          id: item[1].toNumber(),\n          postAnswer: self.postAnswer,\n          upvote: self.handleUpvote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }))));\n    };\n\n    _this.state = {\n      contracts: {},\n      account: '0x0',\n      questions: [],\n      questionCount: 0\n    };\n\n    if (typeof window.web3 === 'undefined') {\n      _this.web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545');\n    } else {\n      var myWeb3 = new Web3(window.web3.currentProvider);\n      myWeb3.eth.defaultAccount = window.web3.eth.defaultAccount;\n      _this.web3Provider = window.web3.currentProvider;\n    }\n\n    _this.web3 = new Web3(_this.web3Provider);\n    _this.AnswerIT = TruffleContract(AnswerIT);\n\n    _this.AnswerIT.setProvider(_this.web3Provider);\n\n    return _this;\n  }\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/shalini/Documents/SU_Courses/Sem3/CIS-600-Blockchain/Project/code/code/answeritapp/appui/src/App.js"],"names":["React","Component","Header","Questions","TruffleContract","PostQuestion","Web3","AnswerIT","App","props","postAnswer","id","answer","contracts","PostAnswer","from","state","account","gas","getQuestions","postQuestion","question","self","msgCount","then","questions","i","toNumber","Messages","q","numAnswers","allAnswers","push","setState","j","answers","upvoteCounts","upvoteValues","ownerAddress","IterateAnswers","GetUpvoteCount","upvoteCount","GetUpvoteValue","upvoteValue","GetOwnerAddress","owner","setAnswers","x","toString","componentDidMount","web3","eth","getCoinbase","err","acc","deployed","instance","handleUpvote","quesId","ansId","UpvoteAnswer","render","map","item","questionCount","window","web3Provider","providers","HttpProvider","myWeb3","currentProvider","defaultAccount","setProvider"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './header';\nimport Questions from \"./questions\";\nimport TruffleContract from 'truffle-contract'\nimport PostQuestion from \"./postquestion\";\nimport Web3 from 'web3';\nimport AnswerIT from '../../backend/build/contracts/AnswerIT.json'; \n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            contracts : {},\n            account : '0x0',\n            questions : [],\n            questionCount : 0\n        }\n\n        if (typeof window.web3 === 'undefined') {\n            this.web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545');\n        } else {\n            var myWeb3 = new Web3(window.web3.currentProvider); \n            myWeb3.eth.defaultAccount = window.web3.eth.defaultAccount;\n\n           this.web3Provider = window.web3.currentProvider;\n        }\n\n        this.web3 = new Web3(this.web3Provider)\n        this.AnswerIT = TruffleContract(AnswerIT)\n        this.AnswerIT.setProvider(this.web3Provider)\n\n\n    }\n\n    postAnswer = (id, answer) => {\n        this.contracts.PostAnswer(id, answer, { from: this.state.account, gas:3000000 })\n        this.getQuestions();\n    }\n\n    postQuestion = (question) => {\n        this.contracts.PostQuestion(question,  { from: this.state.account, gas:3000000 });\n        this.getQuestions();\n    }\n\n    getQuestions = () => {\n        var self = this;\n        self.state.contracts.msgCount().then(function(msgCount){\n\n            var questions = [];\n\n            for (var i = 0; i < msgCount.toNumber(); i++) {\n                self.state.contracts.Messages(i).then(function(q){\n                    var numAnswers = q[5].toNumber();\n                    var id = q[1].toNumber();\n                    var allAnswers = [];\n                    if(numAnswers == 0) {\n                        q.push(allAnswers)\n                        questions.push(q);\n                        self.setState({questions:questions})\n\n                    } else {\n                        for(let j = 0; j < numAnswers; j++) {\n                            var answers = [];\n                            var upvoteCounts = [];\n                            var upvoteValues = [];\n                            var ownerAddress = [];\n\n                            self.state.contracts.IterateAnswers(id, j).then(function(answer){\n                                answers.push(answer);\n                                self.state.contracts.GetUpvoteCount(id,j).then(function(upvoteCount) {\n                                    upvoteCounts.push(upvoteCount);\n                                    self.state.contracts.GetUpvoteValue(id,j).then(function(upvoteValue){\n                                        upvoteValues.push(upvoteValue);\n                                        self.state.contracts.GetOwnerAddress(id,j).then(function(owner) {\n                                            ownerAddress.push(owner);\n                                            if(j == numAnswers - 1)\n                                                self.setAnswers(answers, upvoteCounts, upvoteValues, ownerAddress, numAnswers, q, questions)\n                                        })\n                                    })\n                                })\n                            })\n                        }\n                    }\n\n                })\n            }\n        })\n\n\n    }\n\n    setAnswers = (answers, upvoteCounts, upvoteValues, ownerAddress, numAnswers, q, questions) => {\n        var allAnswers = [];\n        for(let x = 0; x < numAnswers; x++) {\n            allAnswers.push([answers[x], upvoteCounts[x], upvoteValues[x], ownerAddress[x], \"User\"+(x+1).toString()])\n        }\n        \n            q.push(allAnswers);\n            questions.push(q);\n            this.setState({questions:questions})\n        \n    }\n\n    componentDidMount = () => {\n        this.web3.eth.getCoinbase((err, acc)=>{\n            this.setState({account : acc});\n            this.AnswerIT.deployed().then((instance) => {\n                this.contracts = instance;\n                this.setState({contracts : this.contracts}, function(){\n                    this.getQuestions();\n                })\n            })\n        });\n    }\n\n\n    handleUpvote = (quesId, ansId) => {\n        this.contracts.UpvoteAnswer(quesId, ansId,  { from: this.state.account, gas:3000000 });\n    }\n\n    render = () => {\n        var self = this;\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"posts\">\n                    <PostQuestion question={this.postQuestion}/>\n                    <div className=\"questions\">\n                    { this.state.questions.map(function(item, i){\n                        return <Questions key={i} username={item[0]} question={item[2]} answer={item[8]} id= {item[1].toNumber()} postAnswer={self.postAnswer} upvote={self.handleUpvote}/>\n                        })\n                    }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}